syntax = "proto3";

option go_package = "github.com/samuelhem/go_data_streams/datastreams";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

package datastreams;

service DataStreamService {

    rpc Exchange(Message) returns (google.protobuf.Empty) {}
    rpc Register(Application) returns (Application) {}

}

message Message {
    UUID sender = 1;
    string stream = 2;
    MessageType type = 3;
    google.protobuf.Any data = 4;
    Event event = 5;
}

enum MessageType {
    BROADCAST = 0;
    MULTICAST = 1;
    UNICAST = 2;
    SUBSCRIBE = 3;
    UNSUBSCRIBE = 4;
}

message DataStream {
    string name = 1;
    map<string, Event> events = 2;
}

message UUID {
    string value = 1;
}

message Application {
    UUID id = 1;
    string name = 2;
    string hostname = 3;
    ApplicationState state = 4; 
    map<string, DataStream> streams = 5;
}

enum EventState {
    SUBSCRIBED = 0;
    UNSUBSCRIBED = 1;
}

message Event {
    string name = 1;
    EventState state = 2;
}

enum ApplicationState {
    AVAILABLE = 0;
    UNAVAILABLE = 1;
    DELETED = 2;
}
